/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        sym_or_media: sym_or_media {
            compatible = "zmk,behavior-tap-dance";
            label = "SYM_OR_MEDIA";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 4>;

            tapping-term-ms = <150>;
        };

        num_or_media: num_or_media {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_OR_MEDIA";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 4>;

            tapping-term-ms = <150>;
        };

        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 39 36 37 38>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q                   &kp W                     &kp E                 &kp R                     &kp T        &kp Y    &kp U                       &kp I                   &kp O                       &kp P                             &kp MINUS
&kp TAB     &hrm_left LEFT_SHIFT A  &hrm_left LEFT_CONTROL S  &hrm_left LEFT_ALT D  &hrm_left LEFT_COMMAND F  &kp G        &kp H    &hrm_right RIGHT_COMMAND J  &hrm_right RIGHT_ALT K  &hrm_right RIGHT_CONTROL L  &hrm_right RIGHT_SHIFT SEMICOLON  &kp SQT
&kp GRAVE   &kp Z                   &kp X                     &kp C                 &kp V                     &kp B        &kp N    &kp M                       &kp COMMA               &kp DOT                     &kp FSLH                          &kp BACKSLASH
                                                              &kp LEFT_COMMAND      &sym_or_media             &kp SPACE    &kp RET  &num_or_media               &kp BACKSPACE
            >;

            label = "Base";
        };

        symbols_layer {
            bindings = <
&none  &kp CARET        &kp HASH     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp AMPERSAND  &kp PIPE      &none
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PERCENT       &kp MINUS  &kp LESS_THAN     &kp GREATER_THAN   &kp DOLLAR     &kp ASTERISK  &none
&none  &none            &none        &none                 &none                  &none             &none      &none             &none              &none          &none         &none
                                     &trans                &trans                 &trans            &trans     &trans            &trans
            >;

            label = "Symbols";
        };

        numpad_layer {
            bindings = <
&none  &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS        &none   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &none
&none  &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS       &none   &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none
&none  &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0    &none   &none     &none          &none         &none      &none
                                   &trans        &trans        &trans          &trans  &trans    &trans
            >;

            label = "Numpad";
        };

        yabai_layer {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;

            label = "Yabai";
        };

        media_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none  &bt BT_CLR    &none  &none     &kp C_PREV         &kp C_NEXT       &none       &none
&none         &none         &none         &none         &none  &none         &none  &kp C_PP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE  &none
&none         &none         &none         &none         &none  &none         &none  &none     &none              &none            &none       &none
                                          &none         &none  &none         &none  &none     &none
            >;

            label = "Media";
        };
    };
};
